name: Docker release

on:
  push:
    branches:
      - '**'
  schedule:
    - cron: '0 0 * * 0'

jobs:

  build-docker:
    if: github.repository == 'mmurooka/MultiContactController' && github.ref == 'refs/heads/RAL2024'
    permissions:
      packages: write
      contents: read
    runs-on: ubuntu-20.04
    env:
      IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/multi_contact_controller
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v3
        with:
          submodules: recursive
          path: MultiContactController
      - name: Docker version
        run: docker version
      - name: Build docker image
        run: |
          cd ${GITHUB_WORKSPACE}/MultiContactController/.github/workflows/
          docker build -t ${IMAGE_NAME}:${{ github.sha }} --build-arg REPOSITORY=${{ github.repository_owner }} --build-arg COMMIT_SHA=${{ github.sha }} .
      - name: Docker images
        run: docker images
      - name: Login to registries
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin
      - name: Push image for CI
        run: |
          docker push ${IMAGE_NAME}:${{ github.sha }}
      - name: Push image for release
        run: |
          docker tag ${IMAGE_NAME}:${{ github.sha }} ${IMAGE_NAME}:RAL2024
          docker push ${IMAGE_NAME}:RAL2024

  test-docker:
    if: github.repository == 'mmurooka/MultiContactController' && github.ref == 'refs/heads/RAL2024'
    needs: build-docker
    strategy:
      fail-fast: false
      matrix:
        motion-type: [MotionElbowContactWalk, MotionKneeContact]
    runs-on: ubuntu-20.04
    container:
      image: ghcr.io/${{ github.repository_owner }}/multi_contact_controller:${{ github.sha }}
    env:
      HOME: /root
      RESULTS_POSTFIX: ${{ matrix.motion-type }}-RAL2024
    steps:
      - name: Check repository
        shell: bash
        run: |
          set -e
          . ${HOME}/catkin_ws/devel/setup.bash
          roscd multi_contact_controller
          set -x
          git remote get-url origin
          git log HEAD^..HEAD
      - name: Run simulation
        shell: bash
        run: |
          set -e
          . ${HOME}/catkin_ws/devel/setup.bash
          set -x
          export DISPLAY=":1"
          Xvfb ${DISPLAY} -screen 0 1920x1080x24 &
          sleep 10s
          fluxbox 2> /dev/null &
          ffmpeg -y -f x11grab -s 1920x1080 -r 30 -i ${DISPLAY} -qscale 0 -vcodec huffyuv /tmp/video.avi > /dev/null 2>&1 < /dev/null &
          FFMPEG_PID=$!
          ${HOME}/${{ matrix.motion-type }}.bash &
          SCRIPT_PID=$!
          SLEEP_DURATION="90s"
          sleep ${SLEEP_DURATION}
          kill -2 ${SCRIPT_PID}
          kill -2 ${FFMPEG_PID}
          sleep 1s
          kill -9 ${SCRIPT_PID} || true
          sleep 10s
          mkdir -p /tmp/results
          ffmpeg -nostats -i /tmp/video.avi /tmp/results/MCC-video-${RESULTS_POSTFIX}.mp4
      - name: Upload simulation data
        uses: actions/upload-artifact@v3
        with:
          name: BWC-docker-results
          path: /tmp/results
